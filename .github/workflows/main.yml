name: Go

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.6

    - name: SET GitHub ENV k8s version
      env:
        packageName: v1.32.5
      #run: echo "::set-env name=packageName::v1.18.2"
      #run: echo '${{ env.packageName }}'
      run: echo "packageName=${{ env.packageName }}" >> $GITHUB_ENV
    
    - name: Get github Env
      run: echo '${{ env.packageName }}'
       
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
      with:
        ref: ${{ env.packageName }}

#    - name: 切换分支
#      run: git checkout v1.32.5
    
    - name: modify cert time file
      run: |
        sed -i "s/365/365 * 10/" /home/runner/work/kubernetes/kubernetes/cmd/kubeadm/app/constants/constants.go
        sed -i "s/10)/10)/"  /home/runner/work/kubernetes/kubernetes/staging/src/k8s.io/client-go/util/cert/cert.go
    - name: Get modify file
      run: |
        find . -name constants.go |xargs cat |grep 365
        find . -name cert.go |xargs cat |grep 365d
    #- name: github
    #  run: git clone --branch v1.24.16 https://github.com/kubernetes/kubernetes.git

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Get workpath
      run: pwd

    #- name: 切换分支
    #  run: git checkout v1.18.2

    - name: Build kubeadm
      run: KUBE_GIT_TREE_STATE=clean make all WHAT=cmd/kubeadm GOFLAGS=-v

    - name: Get paGth
      run: find . -name kubeadm
    
    - name: Kubeadm version
      run: |
        chmod +x ./_output/local/bin/linux/amd64/kubeadm
        ./_output/local/bin/linux/amd64/kubeadm version
    - name: Package file dirname
      run: mkdir myki && cp ./_output/local/bin/linux/amd64/kubeadm myki

    - uses: actions/upload-artifact@v4
      with:
        name: kubeadm-${{ env.packageName }}
        path: myki
